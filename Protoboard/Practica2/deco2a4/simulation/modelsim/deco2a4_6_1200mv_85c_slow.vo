// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "09/25/2020 12:46:26"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module deco2a4 (
	S,
	D0,
	D1,
	D2,
	D3);
input 	[0:1] S;
output 	D0;
output 	D1;
output 	D2;
output 	D3;

// Design Ports Information
// D0	=>  Location: PIN_N5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D1	=>  Location: PIN_T4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D2	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// D3	=>  Location: PIN_R4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// S[1]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// S[0]	=>  Location: PIN_T2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("deco2a4_6_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \D0~output_o ;
wire \D1~output_o ;
wire \D2~output_o ;
wire \D3~output_o ;
wire \S[0]~input_o ;
wire \S[1]~input_o ;
wire \D0~0_combout ;
wire \D1~0_combout ;
wire \D2~0_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X5_Y0_N9
cycloneive_io_obuf \D0~output (
	.i(!\D0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\D0~output_o ),
	.obar());
// synopsys translate_off
defparam \D0~output .bus_hold = "false";
defparam \D0~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y0_N16
cycloneive_io_obuf \D1~output (
	.i(\D1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\D1~output_o ),
	.obar());
// synopsys translate_off
defparam \D1~output .bus_hold = "false";
defparam \D1~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y0_N2
cycloneive_io_obuf \D2~output (
	.i(\D2~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\D2~output_o ),
	.obar());
// synopsys translate_off
defparam \D2~output .bus_hold = "false";
defparam \D2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y0_N23
cycloneive_io_obuf \D3~output (
	.i(\D1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\D3~output_o ),
	.obar());
// synopsys translate_off
defparam \D3~output .bus_hold = "false";
defparam \D3~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X3_Y0_N1
cycloneive_io_ibuf \S[0]~input (
	.i(S[0]),
	.ibar(gnd),
	.o(\S[0]~input_o ));
// synopsys translate_off
defparam \S[0]~input .bus_hold = "false";
defparam \S[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X7_Y0_N8
cycloneive_io_ibuf \S[1]~input (
	.i(S[1]),
	.ibar(gnd),
	.o(\S[1]~input_o ));
// synopsys translate_off
defparam \S[1]~input .bus_hold = "false";
defparam \S[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X6_Y1_N24
cycloneive_lcell_comb \D0~0 (
// Equation(s):
// \D0~0_combout  = (\S[0]~input_o ) # (\S[1]~input_o )

	.dataa(gnd),
	.datab(\S[0]~input_o ),
	.datac(gnd),
	.datad(\S[1]~input_o ),
	.cin(gnd),
	.combout(\D0~0_combout ),
	.cout());
// synopsys translate_off
defparam \D0~0 .lut_mask = 16'hFFCC;
defparam \D0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X6_Y1_N26
cycloneive_lcell_comb \D1~0 (
// Equation(s):
// \D1~0_combout  = (!\S[0]~input_o  & \S[1]~input_o )

	.dataa(gnd),
	.datab(\S[0]~input_o ),
	.datac(gnd),
	.datad(\S[1]~input_o ),
	.cin(gnd),
	.combout(\D1~0_combout ),
	.cout());
// synopsys translate_off
defparam \D1~0 .lut_mask = 16'h3300;
defparam \D1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X6_Y1_N28
cycloneive_lcell_comb \D2~0 (
// Equation(s):
// \D2~0_combout  = (\S[0]~input_o  & !\S[1]~input_o )

	.dataa(gnd),
	.datab(\S[0]~input_o ),
	.datac(gnd),
	.datad(\S[1]~input_o ),
	.cin(gnd),
	.combout(\D2~0_combout ),
	.cout());
// synopsys translate_off
defparam \D2~0 .lut_mask = 16'h00CC;
defparam \D2~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign D0 = \D0~output_o ;

assign D1 = \D1~output_o ;

assign D2 = \D2~output_o ;

assign D3 = \D3~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_C1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_H1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_H2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_F16,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
